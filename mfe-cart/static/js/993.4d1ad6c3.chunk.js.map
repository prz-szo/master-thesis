{"version":3,"file":"static/js/993.4d1ad6c3.chunk.js","mappings":"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","sources":["assets/ArrowIcon.tsx","assets/CartIcon.tsx","assets/CrossIcon.tsx","hooks/useCart.ts","utils/formatCurrency.ts","components/Buttons.tsx","components/CartItem.tsx","components/CartDrawer/CartDrawer.tsx","components/CartDrawer/bootstrap.tsx"],"sourcesContent":["import React from 'react';\n\nexport const ArrowIcon = (\n  props: JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>\n) => (\n  <svg\n    viewBox=\"0 0 45 45\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path d=\"M24.61 7.184L36.983 19.56c.188.188.321.39.4.61.077.218.116.453.116.703 0 .25-.039.484-.116.703a1.656 1.656 0 01-.4.61L24.61 34.558c-.343.344-.773.524-1.288.54a1.75 1.75 0 01-1.337-.54 1.755 1.755 0 01-.587-1.288 1.75 1.75 0 01.54-1.337l9.188-9.187H10.172c-.531 0-.977-.18-1.337-.538-.359-.36-.538-.806-.538-1.337 0-.532.18-.977.538-1.335.36-.36.806-.54 1.337-.54h20.953l-9.188-9.188c-.343-.344-.523-.781-.54-1.312-.014-.532.166-.97.54-1.313.344-.375.782-.562 1.313-.562.531 0 .984.187 1.36.562z\" />\n  </svg>\n);\n\nexport default ArrowIcon;\n","import React from 'react';\n\nexport const CartIcon = (\n  props: JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>\n) => (\n  <svg\n    viewBox=\"0 0 41 42\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path d=\"M4.667 27.667v-23H.833V.833h5.75A1.917 1.917 0 018.5 2.75v23h23.84l3.833-15.333h-23.84V6.583H38.63a1.917 1.917 0 011.86 2.383l-4.793 19.167a1.917 1.917 0 01-1.859 1.45H6.583a1.917 1.917 0 01-1.916-1.916zM8.5 41.083a3.833 3.833 0 110-7.666 3.833 3.833 0 010 7.666zm23 0a3.834 3.834 0 110-7.667 3.834 3.834 0 010 7.667z\" />\n  </svg>\n);\n\nexport default CartIcon;\n","import React from 'react';\n\nexport const CrossIcon = (\n  props: JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>\n) => (\n  <svg\n    viewBox=\"0 0 27 27\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M21.187 7.247a1.016 1.016 0 00.001-1.433 1.013 1.013 0 00-1.433-.001l-6.112 6.112-6.11-6.112a1.014 1.014 0 10-1.435 1.434l6.112 6.11-6.112 6.11a1.015 1.015 0 001.434 1.435l6.11-6.112 6.113 6.112a1.013 1.013 0 101.432-1.435l-6.112-6.11 6.112-6.11z\"\n    />\n  </svg>\n);\n\nexport default CrossIcon;\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useCallback, useMemo } from 'react';\nimport { useLocalStorage } from 'usehooks-ts';\nimport { Cart, CartItem, Product } from '../types';\n\nconst roundUp = (num: number, precision = 2) => {\n  const factor = 10 ** precision;\n  return Math.ceil(num * factor) / factor;\n};\n\ninterface AddToCartPayload {\n  newProduct: Product;\n  quantity: number;\n}\n\ninterface UpdateProductQuantityPayload {\n  productId: Product['id'];\n  quantity: number;\n}\n\nconst recalculateProductTotals = (existingProduct: CartItem) => {\n  existingProduct.total = existingProduct.quantity * existingProduct.price;\n\n  const discountedPricePercentage =\n    1 - existingProduct.discountPercentage * 0.01;\n\n  existingProduct.discountedPrice = roundUp(\n    existingProduct.total * discountedPricePercentage\n  );\n};\n\nconst recalculateCartTotals = (cart: Cart) => {\n  cart.total = cart.products.reduce((acc, item) => acc + item.total, 0);\n  cart.discountedTotal = roundUp(\n    cart.products.reduce((acc, item) => acc + item.discountedPrice, 0)\n  );\n  cart.totalProducts = cart.products.length;\n  cart.totalQuantity = roundUp(\n    cart.products.reduce((acc, item) => acc + item.quantity, 0)\n  );\n};\n\nexport const useCart = () => {\n  const qClient = useQueryClient();\n  const [persistedCart, persistCart] = useLocalStorage<Cart>('cart', {\n    id: 1,\n    userId: Math.floor(Math.random() * 20) + 1,\n    total: 0,\n    discountedTotal: 0,\n    totalProducts: 0,\n    totalQuantity: 0,\n    products: [],\n  });\n\n  const updateCartValue = useCallback(\n    (value: Cart) => {\n      qClient.setQueryData<Cart>(['cart'], {\n        ...value,\n      });\n      persistCart(value);\n    },\n    [persistCart, qClient]\n  );\n\n  const { data: cart } = useQuery<Cart>({\n    queryKey: ['cart'],\n    notifyOnChangeProps: ['data'],\n    queryFn: () => {\n      const currentCart = qClient.getQueryData<Cart>(['cart']);\n\n      if (persistedCart && (!currentCart || !currentCart.products.length)) {\n        return persistedCart;\n      }\n\n      return currentCart!;\n    },\n    staleTime: Infinity,\n  });\n\n  const { mutate: addToCart } = useMutation({\n    mutationFn: async ({ newProduct, quantity }: AddToCartPayload) => {\n      if (!cart) {\n        return;\n      }\n\n      const existingProduct = cart.products.find(\n        (item) => item.id === newProduct.id\n      );\n\n      if (existingProduct) {\n        existingProduct.quantity += quantity;\n        recalculateProductTotals(existingProduct);\n      } else {\n        const discountedPricePercentage =\n          1 - newProduct.discountPercentage / 100;\n\n        const newCartItem: CartItem = {\n          ...newProduct,\n          quantity,\n          total: newProduct.price * quantity,\n          discountedPrice: roundUp(\n            newProduct.price * quantity * discountedPricePercentage\n          ),\n        };\n\n        cart.products.push(newCartItem);\n      }\n\n      recalculateCartTotals(cart);\n\n      updateCartValue(cart);\n    },\n    onSuccess: () => qClient.invalidateQueries(['cart']),\n  });\n\n  const { mutate: updateProductQuantity } = useMutation({\n    mutationFn: async ({\n      productId,\n      quantity,\n    }: UpdateProductQuantityPayload) => {\n      if (!cart) {\n        return;\n      }\n\n      const product = cart.products.find((item) => item.id === productId);\n      if (!product) {\n        return;\n      }\n\n      if (quantity === 0) {\n        cart.products = cart.products.filter((item) => item.id !== productId);\n      } else {\n        product.quantity = quantity;\n\n        recalculateProductTotals(product);\n      }\n\n      recalculateCartTotals(cart);\n\n      updateCartValue(cart);\n    },\n    onSuccess: () => qClient.invalidateQueries(['cart']),\n  });\n\n  const { mutate: removeFromCart } = useMutation({\n    mutationFn: async (productId: number) => {\n      if (!cart) {\n        return;\n      }\n\n      if (!cart.products.map((p) => p.id).includes(productId)) {\n        return;\n      }\n\n      cart.products = [\n        ...cart.products.filter((item) => item.id !== productId),\n      ];\n\n      recalculateCartTotals(cart);\n\n      updateCartValue(cart);\n    },\n    onSuccess: () => qClient.invalidateQueries(['cart']),\n  });\n\n  const { mutate: clearCart } = useMutation({\n    mutationFn: async () => {\n      if (!cart) {\n        return;\n      }\n\n      cart.products.length = 0;\n\n      recalculateCartTotals(cart);\n\n      updateCartValue(cart);\n    },\n    onSuccess: () => qClient.invalidateQueries(['cart']),\n  });\n\n  return useMemo(\n    () => ({\n      cart,\n\n      addToCart,\n      updateProductQuantity,\n\n      removeFromCart,\n      clearCart,\n    }),\n    [addToCart, cart, clearCart, removeFromCart, updateProductQuantity]\n  );\n};\n","export const formatCurrency = (value: number, currency = 'USD') =>\n  Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(value);\n\nexport default formatCurrency;\n","import ArrowIcon from '../assets/ArrowIcon';\n\ntype Props = {\n  children: string;\n  onClick?: () => void;\n};\n\nexport const OutlineBtn = ({ children, onClick }: Props) => {\n  return (\n    <button\n      onClick={onClick}\n      className=\"outline-amber rounded-sm bg-transparent px-3 py-1 text-amber-400 outline outline-2 transition-all duration-300 hover:bg-amber-400/20\"\n    >\n      {children}\n    </button>\n  );\n};\n\nexport const ArrowBtn = ({ children, onClick }: Props) => {\n  return (\n    <button\n      onClick={onClick}\n      className=\"group flex items-center gap-2 rounded-lg bg-amber-400 py-2 px-6 text-xl font-bold text-neutral-800 transition-all duration-300 hover:bg-neutral-800 hover:text-amber-500 md:text-2xl\"\n    >\n      {children}\n      <div className=\"w-7\">\n        <ArrowIcon className=\"fill-neutral-800 transition-all duration-300 group-hover:fill-amber-500\" />\n      </div>\n    </button>\n  );\n};\n","import {\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n} from '@chakra-ui/react';\nimport { CrossIcon } from '../assets';\nimport { useCart } from '../hooks';\nimport { CartItem } from '../types';\nimport { formatCurrency } from '../utils';\n\nexport const CartItemCard = ({\n  quantity,\n  title,\n  price,\n  discountedPrice,\n  discountPercentage,\n  thumbnail,\n  id,\n}: CartItem) => {\n  const { updateProductQuantity, removeFromCart } = useCart();\n\n  return (\n    <div className=\"flex min-h-[8rem] w-full items-center justify-between gap-6 rounded-lg p-4 shadow-md\">\n      <div className=\"relative h-24 w-24 flex-none\">\n        <img\n          sizes={'(min-width: 768px) 15rem, 100vw'}\n          src={\n            thumbnail ??\n            `https://i.dummyjson.com/data/products/${id}/thumbnail.jpg`\n          }\n          className=\"absolute left-0 top-0 right-0 bottom-0 h-full w-full rounded-lg border border-neutral-400/50 object-cover\"\n          alt={title}\n        />\n      </div>\n\n      <div className=\"flex flex-1 flex-col gap-1 text-center\">\n        <h6 className=\"flex-1 text-center text-lg font-medium\">{title}</h6>\n\n        <div className=\"text-sm\">\n          Price per unit:{' '}\n          <span className=\"font-medium\">\n            {formatCurrency(price - price * discountPercentage * 0.01)}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"flex flex-none items-center gap-6\">\n        <div className=\"flex flex-none items-center gap-2\">\n          <NumberInput\n            maxWidth={'20'}\n            defaultValue={quantity}\n            min={0}\n            max={10}\n            onChange={(_, qty) =>\n              updateProductQuantity({\n                productId: id,\n                quantity: qty,\n              })\n            }\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n\n          <div className=\"flex flex-col gap-1 text-center\">\n            <p className=\"text-xl\">{formatCurrency(discountedPrice)}</p>\n          </div>\n        </div>\n\n        <button\n          onClick={() => removeFromCart(id)}\n          className=\"flex h-7 w-7 flex-none rounded-sm bg-slate-400 transition-all duration-300 hover:bg-amber-500\"\n        >\n          <CrossIcon className=\"fill-slate-50 transition-all duration-300\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n","import {\n  ChakraProvider,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  useDisclosure,\n  useToast,\n} from '@chakra-ui/react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { useCallback, useEffect } from 'react';\nimport { CartIcon } from '../../assets';\nimport { useCart } from '../../hooks';\nimport { formatCurrency } from '../../utils';\nimport { ArrowBtn, OutlineBtn } from '../Buttons';\nimport { CartItemCard } from '../CartItem';\n\nconst queryClient = new QueryClient();\n\n// Augment the global window object with a custom event.\n// As for now lib.dom.d.ts doesn't have a possibility to add event listeners for custom events.\nconst AddToCartCustomEventName = 'cart:item_added';\ninterface AddToCartCustomEventPayload {\n  id: number;\n  quantity?: number;\n}\ninterface AddToCartCustomEvent\n  extends CustomEvent<AddToCartCustomEventPayload> {\n  name: typeof AddToCartCustomEventName;\n}\ndeclare global {\n  interface WindowEventMap {\n    [AddToCartCustomEventName]: AddToCartCustomEvent;\n  }\n}\n\nconst CartDrawer = () => {\n  const toast = useToast();\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  const { cart, clearCart } = useCart();\n\n  const clearCartHandler = useCallback(() => {\n    clearCart();\n  }, [clearCart]);\n\n  useEffect(() => {\n    const listener = (event: AddToCartCustomEvent) => {\n      console.log(event);\n    };\n\n    window.addEventListener('cart:item_added', listener);\n\n    return () => {\n      window.removeEventListener('cart:item_added', listener);\n    };\n  }, []);\n\n  return (\n    <>\n      <div className=\"relative h-7 w-7\">\n        <button disabled={!cart} onClick={onToggle}>\n          <div className=\"h-7 w-7\">\n            <CartIcon className=\"fill-amber-500 transition-all duration-300 hover:fill-amber-400\" />\n          </div>\n        </button>\n\n        <span className=\"items absolute -bottom-2 -right-3 box-content flex h-5 w-5 items-center justify-center rounded-full border-2 border-amber-500 bg-slate-50 text-slate-900\">\n          <span className=\"text-xs transition-all duration-300\">\n            {cart?.totalQuantity ?? 0}\n          </span>\n        </span>\n      </div>\n\n      <Drawer isOpen={isOpen} placement=\"right\" size=\"lg\" onClose={onClose}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader fontSize={'xx-large'}>Your shopping cart</DrawerHeader>\n          <DrawerCloseButton />\n\n          <DrawerBody>\n            <div className=\"flex h-full flex-col gap-6\">\n              <div className=\"flex flex-none items-center justify-between gap-8\">\n                <div className=\"flex items-center gap-2\">\n                  <h4 className=\"text-2xl font-medium\">My Basket</h4>\n                  <p>{`(${cart?.totalQuantity ?? 0} items)`}</p>\n                </div>\n                <div className=\"flex items-center gap-4\">\n                  <OutlineBtn onClick={clearCartHandler}>Clear</OutlineBtn>\n                </div>\n              </div>\n\n              <div className=\"flex flex-1 flex-col gap-4 overflow-y-auto px-2\">\n                {cart?.products.length ? (\n                  cart.products.map((el) => (\n                    <CartItemCard key={el.id} {...el} />\n                  ))\n                ) : (\n                  <span className=\"my-auto text-center text-2xl\">\n                    Your cart is empty\n                  </span>\n                )}\n              </div>\n            </div>\n          </DrawerBody>\n\n          <DrawerFooter borderTopWidth=\"1px\">\n            <div className=\"flex w-full justify-between justify-self-end py-4 px-4 md:px-8 md:py-6\">\n              {cart && (\n                <div className=\"flex flex-col gap-2\">\n                  <h6 className=\"font-medium\">Subtotal Amount:</h6>\n                  <span className=\"text-2xl font-semibold\">\n                    {formatCurrency(cart.discountedTotal)}\n                  </span>\n                </div>\n              )}\n\n              <ArrowBtn\n                onClick={() =>\n                  toast({\n                    title: \"We're sorry. This feature is not available yet.\",\n                    description:\n                      \"We're doing our best to implement it as soon as possible. Please check back later.\",\n                    status: 'info',\n                    duration: 5000,\n                    position: 'top',\n                    isClosable: true,\n                  })\n                }\n              >\n                Checkout\n              </ArrowBtn>\n            </div>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n\nconst CartDrawerParent = () => (\n  <QueryClientProvider client={queryClient}>\n    <ChakraProvider>\n      <CartDrawer />\n    </ChakraProvider>\n  </QueryClientProvider>\n);\n\nexport { CartDrawerParent as CartDrawer };\nexport default CartDrawerParent;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport CartDrawer from './CartDrawer';\n\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\nroot.render(\n  <React.StrictMode>\n    <CartDrawer />\n  </React.StrictMode>\n);\n"],"names":["props","viewBox","fill","xmlns","d","CartIcon","CrossIcon","fillRule","clipRule","roundUp","num","precision","factor","Math","ceil","recalculateProductTotals","existingProduct","total","quantity","price","discountedPricePercentage","discountPercentage","discountedPrice","recalculateCartTotals","cart","products","reduce","acc","item","discountedTotal","totalProducts","length","totalQuantity","useCart","qClient","useQueryClient","useLocalStorage","id","userId","floor","random","persistedCart","persistCart","updateCartValue","useCallback","value","setQueryData","useQuery","queryKey","notifyOnChangeProps","queryFn","currentCart","getQueryData","staleTime","Infinity","data","useMutation","mutationFn","newProduct","find","newCartItem","push","onSuccess","invalidateQueries","addToCart","mutate","productId","product","filter","updateProductQuantity","map","p","includes","removeFromCart","clearCart","useMemo","formatCurrency","currency","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","OutlineBtn","children","onClick","className","ArrowBtn","CartItemCard","title","thumbnail","sizes","src","alt","maxWidth","defaultValue","min","max","onChange","_","qty","queryClient","QueryClient","CartDrawer","toast","useToast","useDisclosure","isOpen","onToggle","onClose","clearCartHandler","useEffect","listener","event","console","log","window","addEventListener","removeEventListener","disabled","placement","size","fontSize","el","borderTopWidth","description","status","duration","position","isClosable","QueryClientProvider","client","ReactDOM","document","getElementById","render"],"sourceRoot":""}